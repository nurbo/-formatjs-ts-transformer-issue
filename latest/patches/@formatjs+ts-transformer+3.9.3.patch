diff --git a/node_modules/@formatjs/ts-transformer/src/console_utils.js b/node_modules/@formatjs/ts-transformer/src/console_utils.js
index 0773be1..45e2cc5 100644
--- a/node_modules/@formatjs/ts-transformer/src/console_utils.js
+++ b/node_modules/@formatjs/ts-transformer/src/console_utils.js
@@ -23,7 +23,6 @@ function debug(message) {
                 return [2 /*return*/];
             }
             console.error(util_1.format.apply(void 0, (0, tslib_1.__spreadArray)([label('debug', message)], args, false)));
-            console.error('\n');
             return [2 /*return*/];
         });
     });
diff --git a/node_modules/@formatjs/ts-transformer/src/transform.js b/node_modules/@formatjs/ts-transformer/src/transform.js
index 69b9808..0c86e2f 100644
--- a/node_modules/@formatjs/ts-transformer/src/transform.js
+++ b/node_modules/@formatjs/ts-transformer/src/transform.js
@@ -303,6 +303,9 @@ function extractMessageFromJsxComponent(ts, factory, node, opts, sf) {
     if (!msg) {
         return node;
     }
+
+    (0, console_utils_1.debug)('Message extracted from component "%s": %s', sf.fileName, msg);
+
     if (typeof onMsgExtracted === 'function') {
         onMsgExtracted(sf.fileName, [msg]);
     }
@@ -436,6 +439,8 @@ function extractMessagesFromCallExpression(ts, factory, node, opts, sf) {
 var PRAGMA_REGEX = /^\/\/ @([^\s]*) (.*)$/m;
 function getVisitor(ts, ctx, sf, opts) {
     var visitor = function (node) {
+        (0, console_utils_1.debug)('Visiting node from "%s": %s', sf.fileName, ts.SyntaxKind[node.kind]);
+
         var newNode = ts.isCallExpression(node)
             ? extractMessagesFromCallExpression(ts, ctx.factory, node, opts, sf)
             : ts.isJsxOpeningElement(node) || ts.isJsxSelfClosingElement(node)
